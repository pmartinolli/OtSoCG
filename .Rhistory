library(igraph)
net <- graph_from_data_frame(d=ttrpg, directed=T)
# https://kateto.net/network-visualization
#https://michael.hahsler.net/SMU/ScientificCompR/code/map.R
map <- function(x, range = c(0,1), from.range=NA) {
if(any(is.na(from.range))) from.range <- range(x, na.rm=TRUE)
## check if all values are the same
if(!diff(from.range)) return(
matrix(mean(range), ncol=ncol(x), nrow=nrow(x),
dimnames = dimnames(x)))
## map to [0,1]
x <- (x-from.range[1])
x <- x/diff(from.range)
## handle single values
if(diff(from.range) == 0) x <- 0
## map from [0,1] to [range]
if (range[1]>range[2]) x <- 1-x
x <- x*(abs(diff(range))) + min(range)
x[x<min(range) | x>max(range)] <- NA
x
}
plot(net,
edge.arrow.size = 0.05,
vertex.size=map(degree(net),c(1,20)),
vertex.color=map(degree(net),c(1,20)),
vertex.label.cex=1,
vertex.label.family="Helvetica"
)
# Exporter en PDF taille : Device size = 60x40
library(readxl)
ttrpg <- read_excel("data/ttrpg.xlsx")
View(ttrpg)
library(igraph)
net <- graph_from_data_frame(d=ttrpg, directed=T)
# https://kateto.net/network-visualization
#https://michael.hahsler.net/SMU/ScientificCompR/code/map.R
map <- function(x, range = c(0,1), from.range=NA) {
if(any(is.na(from.range))) from.range <- range(x, na.rm=TRUE)
## check if all values are the same
if(!diff(from.range)) return(
matrix(mean(range), ncol=ncol(x), nrow=nrow(x),
dimnames = dimnames(x)))
## map to [0,1]
x <- (x-from.range[1])
x <- x/diff(from.range)
## handle single values
if(diff(from.range) == 0) x <- 0
## map from [0,1] to [range]
if (range[1]>range[2]) x <- 1-x
x <- x*(abs(diff(range))) + min(range)
x[x<min(range) | x>max(range)] <- NA
x
}
plot(net,
edge.arrow.size = 0.05,
vertex.size=map(degree(net),c(1,20)),
vertex.color=map(degree(net),c(1,20)),
vertex.label.cex=1,
vertex.label.family="Helvetica"
)
# Exporter en PDF taille : Device size = 60x40
install.packages("fontMPlus")
library(igraph)
net <- graph_from_data_frame(d=ttrpg, directed=T)
# https://kateto.net/network-visualization
#https://michael.hahsler.net/SMU/ScientificCompR/code/map.R
map <- function(x, range = c(0,1), from.range=NA) {
if(any(is.na(from.range))) from.range <- range(x, na.rm=TRUE)
## check if all values are the same
if(!diff(from.range)) return(
matrix(mean(range), ncol=ncol(x), nrow=nrow(x),
dimnames = dimnames(x)))
## map to [0,1]
x <- (x-from.range[1])
x <- x/diff(from.range)
## handle single values
if(diff(from.range) == 0) x <- 0
## map from [0,1] to [range]
if (range[1]>range[2]) x <- 1-x
x <- x*(abs(diff(range))) + min(range)
x[x<min(range) | x>max(range)] <- NA
x
}
plot(net,
edge.arrow.size = 0.05,
vertex.size=map(degree(net),c(1,20)),
vertex.color=map(degree(net),c(1,20)),
vertex.label.cex=1,
vertex.label.family="Helvetica"
)
# Exporter en PDF taille : Device size = 60x40
